class Solution {
    public int[] mostCompetitive(int[] nums, int k) {
        
        Stack<Integer> st = new Stack<>();
        
        int n = nums.length;
        for(int i=0; i < n; i++)
        {
            int val = nums[i];
            
            
            // valid ==> rem >= req    & smaller ==> nums[i] < st.peek()
            while(st.size() > 0 && nums[i] < st.peek() && n - i - 1 >=  k - st.size())  
            {
                st.pop();
            }
            
            if(st.size() < k)
            {
                st.push(val);
            }
            
        }
        
        int ans[] = new int[k];
        
        for(int i = k - 1; i >= 0; i--)
        {
            ans[i] = st.pop();
        }
        
        return ans;
    }
}

//https://www.youtube.com/watch?v=wuwE7g8VvgQ
