class Solution {
    public String removeDuplicateLetters(String s) {
        
        int lastIndex[] = new int[26];
        
        for(int i = 0; i < s.length(); i++)
        {
            lastIndex[s.charAt(i) - 'a'] = i;  // // track the lastIndex of character presence
        }
        
        boolean seen[] = new boolean[26];  // keep track seen
        
        Stack<Integer> st = new Stack<>();
        
        for(int i = 0; i < s.length(); i++)
        {
            int curr = s.charAt(i) - 'a';
            
            if(seen[curr] == true) continue; // if seen continue as we need to pick one char only
            
            while(!st.isEmpty() && st.peek() > curr && i <  lastIndex[st.peek()])
            {
                seen[st.pop()] = false;
            }
            
            st.push(curr);
            seen[curr] = true;
        }
        
        StringBuilder sb = new StringBuilder();
        while(st.size() > 0)
        {
            sb.append((char) (st.pop() + 'a'));
            
        }
       
        return sb.reverse().toString();
    }
}

//https://leetcode.com/problems/remove-duplicate-letters/discuss/1859410/JavaC%2B%2B-DETAILED-%2B-VISUALLY-EXPLAINED-!!
//https://www.youtube.com/watch?v=muDlIlVE1q4&t=89s

//https://www.youtube.com/watch?v=luCn7p2CIbI
